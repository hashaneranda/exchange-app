name: deploy-AKS

# Controls when the action will run.
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_call:
    inputs:
      NAMESPACE:
        required: true
        type: string
    secrets:
      AZURE_CREDENTIALS:
        required: true

# Environment variables available to all jobs and steps in this workflow
env:
  CLUSTER_NAME: exchange-cluster
  CLUSTER_RESOURCE_GROUP: cloudcw

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest
    name: deploy
    # needs: [build]
    steps:
      - uses: actions/checkout@main

        # Set the target Azure Kubernetes Service (AKS) cluster.
      - uses: azure/aks-set-context@v1
        name: "Set the target Azure Kubernetes Service (AKS) cluster."
        with:
          creds: "${{ secrets.AZURE_CREDENTIALS }}"
          cluster-name: ${{ env.CLUSTER_NAME }}
          resource-group: ${{ env.CLUSTER_RESOURCE_GROUP }}

        # Create namespace if doesn't exist
      - run: |
          kubectl create namespace ${{ NAMESPACE }} --dry-run=client -o json | kubectl apply -f -

        # Create env
      - run: |
          kubectl create secret generic exchange-secret --from-env-file=${{ github.workspace }}/deployment/env.txt --dry-run=client -o json

        # Deploy app to AKS
      - uses: azure/k8s-deploy@v1
        name: "Deploy app to AKS"
        with:
          manifests: |
            ${{ github.workspace }}/deployment/auth-deployment.yaml
            ${{ github.workspace }}/deployment/exchange-deployment.yaml
            ${{ github.workspace }}/deployment/gateway-deployment.yaml
            ${{ github.workspace }}/deployment/ingress.yaml
          images: |
            ghcr.io/${{ github.repository_owner }}/container-apps
          namespace: ${{ NAMESPACE }}
